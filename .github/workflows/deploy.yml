name: Build and Push to ECR

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  EC2_HOST: ec2-user@34.237.169.142
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  ECR_REPOSITORY: 381492290017.dkr.ecr.us-east-1.amazonaws.com/wr

permissions:
  id-token: write
  contents: read
  deployments: write

jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v2
#      with:
#        role-to-assume: arn:aws:iam::381492290017:role/ECRAccessGithubRole
#        aws-region: ${{ env.AWS_REGION }}
#
#    - name: Login to Amazon ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1
#
#    - name: Build, tag, and push image to Amazon ECR
#      run: |
#        docker build -t $ECR_REPOSITORY:latest .
#        docker push $ECR_REPOSITORY:latest
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: 34.237.169.142
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          run: |
									 docker login -u AWS -p $(aws ecr get-login-password --region $AWS_DEFAULT_REGION) ${{ env.ECR_REPOSITORY }}
#		          docker pull ${{ env.ECR_REPOSITORY }}:latest
#		          docker stop my-container || true
#		          docker rm my-container || true
#		          docker run -d \
#		            --name my-container \
#		            -p 80:80 \
#		            -e SECRET_KEY=${{ env.SECRET_KEY }} \
#		            -e DB_NAME=${{ env.DB_NAME }} \
#		            -e DB_USER=${{ env.DB_USER }} \
#		            -e DB_PASSWORD=${{ env.DB_PASSWORD }} \
#		            -e DB_HOST=${{ env.DB_HOST }} \
#		            -e DB_PORT=${{ env.DB_PORT }} \
#		            -e REDIS_HOST=${{ env.REDIS_HOST }} \
#		            ${{ env.ECR_REPOSITORY }}:latest
#  deploy:
#    runs-on: ubuntu-latest
##    needs: build-and-push
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    - name: Deploy to EC2
#      env:
#        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
#      run: |
#        echo "$EC2_SSH_KEY" > ec2_key.pem
#        chmod 600 ec2_key.pem
#        ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ env.EC2_HOST }} << 'EOF'
#          docker login -u AWS -p $(aws ecr get-login-password --region $AWS_DEFAULT_REGION) ${{ env.ECR_REPOSITORY }}
#          docker pull ${{ env.ECR_REPOSITORY }}:latest
#          docker stop my-container || true
#          docker rm my-container || true
#          docker run -d \
#            --name my-container \
#            -p 80:80 \
#            -e SECRET_KEY=${{ env.SECRET_KEY }} \
#            -e DB_NAME=${{ env.DB_NAME }} \
#            -e DB_USER=${{ env.DB_USER }} \
#            -e DB_PASSWORD=${{ env.DB_PASSWORD }} \
#            -e DB_HOST=${{ env.DB_HOST }} \
#            -e DB_PORT=${{ env.DB_PORT }} \
#            -e REDIS_HOST=${{ env.REDIS_HOST }} \
#            ${{ env.ECR_REPOSITORY }}:latest
#        EOF
#
